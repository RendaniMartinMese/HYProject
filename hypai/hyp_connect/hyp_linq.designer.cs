#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace hyp_connect
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hyp_database")]
	public partial class hyp_linqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAd(Ad instance);
    partial void UpdateAd(Ad instance);
    partial void DeleteAd(Ad instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    #endregion
		
		public hyp_linqDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["hyp_databaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public hyp_linqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hyp_linqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hyp_linqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hyp_linqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ad> Ads
		{
			get
			{
				return this.GetTable<Ad>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ad")]
	public partial class Ad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AD_ID;
		
		private string _AUDIO_DIR;
		
		private System.DateTime _DATE_DURATION;
		
		private string _AD_TYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAD_IDChanging(int value);
    partial void OnAD_IDChanged();
    partial void OnAUDIO_DIRChanging(string value);
    partial void OnAUDIO_DIRChanged();
    partial void OnDATE_DURATIONChanging(System.DateTime value);
    partial void OnDATE_DURATIONChanged();
    partial void OnAD_TYPEChanging(string value);
    partial void OnAD_TYPEChanged();
    #endregion
		
		public Ad()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AD_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AD_ID
		{
			get
			{
				return this._AD_ID;
			}
			set
			{
				if ((this._AD_ID != value))
				{
					this.OnAD_IDChanging(value);
					this.SendPropertyChanging();
					this._AD_ID = value;
					this.SendPropertyChanged("AD_ID");
					this.OnAD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AUDIO_DIR", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AUDIO_DIR
		{
			get
			{
				return this._AUDIO_DIR;
			}
			set
			{
				if ((this._AUDIO_DIR != value))
				{
					this.OnAUDIO_DIRChanging(value);
					this.SendPropertyChanging();
					this._AUDIO_DIR = value;
					this.SendPropertyChanged("AUDIO_DIR");
					this.OnAUDIO_DIRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_DURATION", DbType="DateTime NOT NULL")]
		public System.DateTime DATE_DURATION
		{
			get
			{
				return this._DATE_DURATION;
			}
			set
			{
				if ((this._DATE_DURATION != value))
				{
					this.OnDATE_DURATIONChanging(value);
					this.SendPropertyChanging();
					this._DATE_DURATION = value;
					this.SendPropertyChanged("DATE_DURATION");
					this.OnDATE_DURATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AD_TYPE", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AD_TYPE
		{
			get
			{
				return this._AD_TYPE;
			}
			set
			{
				if ((this._AD_TYPE != value))
				{
					this.OnAD_TYPEChanging(value);
					this.SendPropertyChanging();
					this._AD_TYPE = value;
					this.SendPropertyChanged("AD_TYPE");
					this.OnAD_TYPEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _REPORT_ID;
		
		private string _INDEX;
		
		private string _CATEGORY;
		
		private int _READ_STATUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnREPORT_IDChanging(int value);
    partial void OnREPORT_IDChanged();
    partial void OnINDEXChanging(string value);
    partial void OnINDEXChanged();
    partial void OnCATEGORYChanging(string value);
    partial void OnCATEGORYChanged();
    partial void OnREAD_STATUSChanging(int value);
    partial void OnREAD_STATUSChanged();
    #endregion
		
		public Report()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REPORT_ID", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int REPORT_ID
		{
			get
			{
				return this._REPORT_ID;
			}
			set
			{
				if ((this._REPORT_ID != value))
				{
					this.OnREPORT_IDChanging(value);
					this.SendPropertyChanging();
					this._REPORT_ID = value;
					this.SendPropertyChanged("REPORT_ID");
					this.OnREPORT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[INDEX]", Storage="_INDEX", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string INDEX
		{
			get
			{
				return this._INDEX;
			}
			set
			{
				if ((this._INDEX != value))
				{
					this.OnINDEXChanging(value);
					this.SendPropertyChanging();
					this._INDEX = value;
					this.SendPropertyChanged("INDEX");
					this.OnINDEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CATEGORY
		{
			get
			{
				return this._CATEGORY;
			}
			set
			{
				if ((this._CATEGORY != value))
				{
					this.OnCATEGORYChanging(value);
					this.SendPropertyChanging();
					this._CATEGORY = value;
					this.SendPropertyChanged("CATEGORY");
					this.OnCATEGORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_READ_STATUS", DbType="Int NOT NULL")]
		public int READ_STATUS
		{
			get
			{
				return this._READ_STATUS;
			}
			set
			{
				if ((this._READ_STATUS != value))
				{
					this.OnREAD_STATUSChanging(value);
					this.SendPropertyChanging();
					this._READ_STATUS = value;
					this.SendPropertyChanged("READ_STATUS");
					this.OnREAD_STATUSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
